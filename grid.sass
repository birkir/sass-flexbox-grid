// Flexbox Grid
// ported from github.com/kristoferjoseph/flexboxgrid
//
// Copyright (c) 2015 Birkir Gudjonsson
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// mixins from http://github.com/mastastealth/sass-flex-mixin
@import flex

// variables
$outer-margin: 2rem
$gutter-width: 1rem
$columns: 12

// computed
$gutter-splitted: $gutter-width / 2
$gutter-compensation: $gutter-splitted * -1

// base grid column extender
=column-base
  +flexbox
  +flex(0 1 auto)
  +flex-direction(column)
  +flex-grow(0)
  +flex-shrink(0)
  box-sizing: border-box
  padding-left: $gutter-splitted
  padding-right: $gutter-splitted

// column mixin
=column($index: 0)
  +flex-basis(percentage($index / $columns))
  max-width: percentage($index / $columns)
  @if $index == 1
    +flex-grow(1)

// make grid
=grid($size, $width: 0)
  // proxy column base because of media scopes
  %column-#{$size}-base
    +column-base
  // set container width for viewports
  @if $width != 0
    .container
      width: #{$width + $gutter-width / ($gutter-width * 0 + 1)}em
  @for $i from 1 through $columns
    // create column classes
    .col-#{$size}-#{$i}
      @extend %column-#{$size}-base !optional
      +column($i)
    // offet classes
    @if $i < 12
      .col-#{$size}-offset-#{$i}
        margin-left: percentage($i / $columns)
  // some helper classes
  .start-#{$size}
    +justify-content(start)
    text-align: start
  .center-#{$size}
    +justify-content(center)
    text-align: center
  .end-#{$size}
    +justify-content(end)
    text-align: end
  .top-#{$size}
    +align-items(start)
  .middle-#{$size}
    +align-items(middle)
  .bottom-#{$size}
    +align-items(bottom)
  .around-#{$size}
    +justify-content(space-around)
  .between-#{$size}
    +justify-content(space-between)
  .first-#{$size}
    +order(-1)
  .last-#{$size}
    +order(1)

.container-fluid
  margin-left: auto
  margin-right: auto
  padding-left: $outer-margin
  padding-right: $outer-margin

.row
  +flexbox
  +flex(0 1 auto)
  +flex-direction(row)
  +flex-wrap(wrap)
  box-sizing: border-box
  margin-left: $gutter-compensation
  margin-right: $gutter-compensation

.row.reverse
  +flex-direction(row-reverse)

.col.reverse
  +flex-direction(column-reverse)

+grid(xs)

@media only screen and (min-width: 48em)
  +grid(sm, 45)

@media only screen and (min-width: 62em)
  +grid(md, 60)

@media only screen and (min-width: 75em)
  +grid(lg, 70)
